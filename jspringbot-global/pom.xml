<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>nxl-jspringbot-libraries</artifactId>
    <groupId>com.nextlabs.qa</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>jspringbot-global</artifactId>

  <properties>
    <libdoc.outputfile>NXLJSpringBotGlobal</libdoc.outputfile>
    <main.basedir>${project.basedir}/..</main.basedir>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.robotframework</groupId>
      <artifactId>robotframework</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot-i18n</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot-xml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot-json</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot-date</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jspringbot</groupId>
      <artifactId>jspringbot-expression</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <!-- Set 1.7 as target, use project source encoding -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <optimize>true</optimize>
          <debug>true</debug>
          <compilerId>javac</compilerId>
        </configuration>
      </plugin>

      <plugin>
        <!-- Build the fat jar with all dependencies -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jspringbot</groupId>
        <artifactId>jspringbot-maven-plugin</artifactId>
        <version>${jspringbot.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <id>libdoc-xml</id>
            <goals>
              <goal>libdoc</goal>
            </goals>
            <configuration>
              <outputFile>${libdoc.outputfile}.xml</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="Copy script Artifacts to automation kit">

                <mkdir dir="${automationkitDir}/lib" />
                <mkdir dir="${automationkitDir}/libdoc" />

                <copy todir="${automationkitDir}/lib">
                  <fileset dir="${project.build.directory}" includes="*-jar-with-dependencies.jar"/>
                </copy>

                <copy todir="${automationkitDir}/libdoc" failonerror="false">
                  <fileset dir="${project.build.directory}/robotframework/libdoc" includes="${libdoc.outputfile}.*"/>
                </copy>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>